<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">
<style>

    body {
        background-image: url('https://wallpapercave.com/wp/wp2742875.jpg');
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: cover;

    }

    canvas {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        border:1px solid #d3d3d3;
        background-color: #f1f1f1;

    }
    .br {
            display: block;
            margin-bottom: 0em;
        }
    .button{
        background-color: #f2e6ff;
        border: none;
        color: white;
        padding: 16px 32px;
        text-align: center;
        font-size: 16px;
        margin: 4px 2px;
        opacity: 0.6;
        transition: 0.3s;

    }

    .arrow {
        border: solid black;
        border-width: 0 3px 3px 0;
        display: inline-block;
        padding: 3px;
    }

    .right {
      transform: rotate(-45deg);
      -webkit-transform: rotate(-45deg);
    }

    .left {
        transform: rotate(135deg);
        -webkit-transform: rotate(135deg);
    }

    .up {
        transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
    }

    .down {
        transform: rotate(45deg);
      - webkit-transform: rotate(45deg);
    }
</style>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
</head>
<body onload="startGame()">
<script>

var myGamePiece;

function startGame() {
    myGamePiece = new component(30, 30, "red", 10, 120);
    myGameArea.start();
}

var myGameArea = {
    canvas : document.createElement("canvas"),
    start : function() {
        this.canvas.width = 540;
        this.canvas.height = 380;
        this.context = this.canvas.getContext("2d");
        document.body.insertBefore(this.canvas, document.body.childNodes[0]);
        this.interval = setInterval(updateGameArea, 20);
    },
    clear : function() {
        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }
}

function component(width, height, color, x, y) {
    this.width = width;
    this.height = height;
    this.speedX = 0;
    this.speedY = 0;
    this.x = x;
    this.y = y;
    this.update = function() {
        ctx = myGameArea.context;
        ctx.fillStyle = color;
        ctx.fillRect(this.x, this.y, this.width, this.height);
    }
    this.newPos = function() {
        this.x += this.speedX;
        this.y += this.speedY;
    }
}

function updateGameArea() {
    myGameArea.clear();
    myGamePiece.newPos();
    myGamePiece.update();
}

function moveup() {
    myGamePiece.speedY = -1;
}

function movedown() {
    myGamePiece.speedY = 1;
}

function moveleft() {
    myGamePiece.speedX = -1;
}

function moveright() {
    myGamePiece.speedX = 1;
}

function clearmove() {
    myGamePiece.speedX = 0;
    myGamePiece.speedY = 0;
}
</script>
<div style="text-align:center;width:480px;">
  <button type="button" class="button" onmousedown="moveup()" onmouseup="clearmove()" ontouchstart="moveup()"><i class="arrow up"></i></button><span class="br"></span>
  <button type="button" class="button" onmousedown="moveleft()" onmouseup="clearmove()" ontouchstart="moveleft()"><i class="arrow left"></i></button>
  <button type="button" class="button" onmousedown="movedown()" onmouseup="clearmove()" ontouchstart="movedown()"><i class="arrow down"></i></button>
  <button type="button" class="button" onmousedown="moveright()" onmouseup="clearmove()" ontouchstart="moveright()"><i class="arrow right"></i></button>
</div>

</body>
</html>
